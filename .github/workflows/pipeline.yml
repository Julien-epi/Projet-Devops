name: Pipeline CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube
        ports:
          - 9000:9000

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test --if-present

    # Étape pour tester la disponibilité de SonarQube
    - name: Vérifier la disponibilité de SonarQube
      run: |
        echo "Vérification de la disponibilité de SonarQube..."
        curl --retry 5 --retry-delay 10 --retry-connrefused http://sonarqube:9000

    # Étape SonarQube Scan
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: http://sonarqube:9000
      with:
        args: >
          -Dsonar.projectKey=Julien-epi_Projet-Devops_AYyB4gS-iG9UQ8S_ethY
          -Dsonar.organization=Julien-epi
          -Dsonar.host.url=http://sonarqube:9000
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Build Docker Image
      run: docker build -t julien94800/image-front:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Push Docker Image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/image-front:latest

    - name: Continuous Deployment
      run: |
        ./script-docker.sh
